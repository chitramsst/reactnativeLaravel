



npx @react-native-community/cli@latest init MyProject --version latest

npx react-native doctor ( to check dependencies)

___________________________________
To fix the sdk JAVA Home version issue

/usr/libexec/java_home -V
export JAVA_HOME=/Users/chitra/Library/Java/JavaVirtualMachines/openjdk-20.0.1/Contents/Home 
Error

/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home


npx react-native run-android  


nano ~/.zshrc


export ANDROID_HOME=/Users/chitra/Library/Android/sdk
export ANDROID_SDK_ROOT=$ANDROID_HOME
export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
export PATH=$JAVA_HOME/bin:$PATH


Ctrl x y for save


To fix grade issue:

Cd android
./gradlew clean
___________


Run instructions for Android:
    • Have an Android emulator running (quickest way to get started), or a device connected.
    • cd "/Users/chitra/Documents/chitra_study/react-native/study/MyProject" && npx react-native run-android
  
  Run instructions for iOS:
    • cd "/Users/chitra/Documents/chitra_study/react-native/study/MyProject"
    
    • npx react-native run-ios
    - or -
    • Open MyProject/ios/MyProject.xcworkspace in Xcode or run "xed -b ios"
    • Hit the Run button
    


important
https://medium.com/swlh/handling-asynchronous-actions-with-redux-thunk-86b8d8e0b83e


npm install redux 
npm install react-redux 
npm install redux-thunk 
npm install axios
npm install @react-navigation/native 
npm install @react-navigation/stack 
npm install react-native-screens 
npm install react-native-gesture-handler
npm install react-native-safe-area-context

npm install react-native-gesture-handler react-native-reanimated react-native-safe-area-context


android/settings.gradle (must)

apply from: file("$rootDir/../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")


127.0.0.1 inside the emulator refers to the emulator itself.
10.0.2.2 is a special alias that allows the emulator to talk to your computer’s localhost.

npm install --save-dev @types/redux-persist


for ios

open ios/MyReactNativeApp.xcworkspace


1️⃣ Open the Project in Xcode & Build Manually
Run:
open ios/MyReactNativeApp.xcworkspace

In Xcode, select your device/simulator (top bar).
Click Product → Clean Build Folder (Shift + Cmd + K).
Click Product → Build (Cmd + B).
If there are any errors, fix them.


cd ios
rm -rf Pods Podfile.lock
pod cache clean --all
pod install --verbose
cd ..


rm -rf node_modules package-lock.json
rm -rf android/.gradle android/build android/app/build
rm -rf ios/Pods ios/build



rm -rf node_modules package-lock.json
rm -rf android/.gradle android/build android/app/build




https://dribbble.com/shots/18427655-Finance-Dark-theme-Design

Icons in ios

[
npm i --save-dev @types/react-native-vector-icons



Manually Copy the Font File

Locate Ionicons.ttf in:

node_modules/react-native-vector-icons/Fonts/Ionicons.ttf
Copy Ionicons.ttf to your project’s ios/YourApp directory.

Open ios/YourApp.xcworkspace in Xcode.
In the left panel, right-click YourApp folder > Select "Add Files to YourApp".
Choose Ionicons.ttf from the ios/YourApp directory.
In the pop-up, ensure "Add to targets" is checked.
Modify Info.plist

In Xcode, open Info.plist (found in the left sidebar under ios/YourApp).
Add the following inside <dict>:
<key>UIAppFonts</key>
<array>
    <string>Ionicons.ttf</string>
</array>

Save the changes.
Rebuild the iOS Project

Run:
cd ios && pod install && cd ..

npx react-native run-ios


cd ios 
pod install --repo-update 
cd .. 
npx react-native run-ios
]




cd ios
rm -rf Pods Podfile.lock
pod install --verbose 



clean build from other devices


rm -rf ios/build
xcodebuild clean

rm -rf ~/Library/Developer/Xcode/DerivedData


open ios/MyReactNativeApp.xcworkspace

Click Product → Clean Build Folder (Cmd + Shift + K).

Click Product → Build (Cmd + B).



in pod file 


target 'YourAppName' do
  use_frameworks!

  # Firebase modules
  pod 'FirebaseAnalytics'  
  pod 'FirebaseAuth'       # Authentication (optional)
  pod 'FirebaseFirestore'  # Firestore (optional)
  
end


cd ios

pod install --repo-update
open YourApp.xcworkspace
5. Clean and Build
In Xcode, go to Product → Clean Build Folder (Shift + Cmd + K).
Then, build your project (Cmd + B).




lsof -i :8081
kill -9 <PID>



Node path missing issue (while changed node versions)

sudo mkdir -p /opt/homebrew/Cellar/node/23.3.0/bin/
sudo ln -s $(which node) /opt/homebrew/Cellar/node/23.3.0/bin/node

clean and rebuild object
rm -rf node_modules ios/Pods ios/build
yarn install  # or npm install
cd ios && pod install --verbose && cd ..
npx react-native run-ios



Run on Ios

To run your React Native app on an iPhone 15 Pro, you need to enable developer mode and trust your development certificate. Follow these steps:

1. Enable Developer Mode on iPhone 15 Pro
Since iOS 16, Apple requires you to enable Developer Mode for sideloading apps.

Go to:
Settings → Privacy & Security → Developer Mode

Toggle it ON and restart your iPhone.

After restarting, confirm enabling Developer Mode.

2. Trust Your Developer Certificate
When running your app on a real iPhone via Xcode, you may see an "Untrusted Developer" message.

A. Get Your Developer Profile in Xcode
Open your React Native project in Xcode:

bash
Copy
Edit
open ios/MyApp.xcworkspace
In the top bar, select your iPhone 15 Pro as the target.

Go to Xcode → Settings → Accounts.

Sign in with your Apple ID (you can use a free Apple ID).

Under Signing & Capabilities, select Automatically manage signing.

Xcode will generate a provisioning profile.

B. Trust the Certificate on Your iPhone
Go to Settings → General → VPN & Device Management.

Under Developer App, tap your Apple ID.

Tap Trust and confirm.

3. Run Your App on the iPhone
Now, in your terminal, run:

bash
Copy
Edit
npx react-native run-ios --device
Or, in Xcode, click the ▶️ Run button.


1. ipconfig getifaddr en0

here you can get ipaddress

2. In api url
const API_URL =
  Platform.OS === 'android' ? 'http://10.0.2.2:8000/api' : 'http://192.168.1.5:8000/api';

2. In Laravel side:

php artisan serve --host=0.0.0.0 --port=8000
http://192.168.1.5:8000/

3. In Laravel .env file

APP_URL=http://192.168.1.5:8000

Then you can access localhost database